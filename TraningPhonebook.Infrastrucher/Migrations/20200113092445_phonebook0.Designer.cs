// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TraningPhonebook.Infrastrucher;

namespace TraningPhonebook.Infrastrucher.Migrations
{
    [DbContext(typeof(PhoneBookRepository))]
    [Migration("20200113092445_phonebook0")]
    partial class phonebook0
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TraningPhonebook.Core.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Scope")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("TraningPhonebook.Core.ContactItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ItemTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("RelatedContactId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ItemTypeId");

                    b.HasIndex("RelatedContactId");

                    b.ToTable("ContactItemTable");
                });

            modelBuilder.Entity("TraningPhonebook.Core.ContactType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Icon")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RelatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RelatedUserId");

                    b.ToTable("ContactTypeTable");
                });

            modelBuilder.Entity("TraningPhonebook.Core.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonelId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProfileContactId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProfileContactId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("TraningPhonebook.Core.Contact", b =>
                {
                    b.HasOne("TraningPhonebook.Core.User", null)
                        .WithMany("ContactList")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("TraningPhonebook.Core.ContactItem", b =>
                {
                    b.HasOne("TraningPhonebook.Core.ContactType", "ItemType")
                        .WithMany()
                        .HasForeignKey("ItemTypeId");

                    b.HasOne("TraningPhonebook.Core.Contact", "RelatedContact")
                        .WithMany("ContactItems")
                        .HasForeignKey("RelatedContactId");
                });

            modelBuilder.Entity("TraningPhonebook.Core.ContactType", b =>
                {
                    b.HasOne("TraningPhonebook.Core.User", "RelatedUser")
                        .WithMany("TypeList")
                        .HasForeignKey("RelatedUserId");
                });

            modelBuilder.Entity("TraningPhonebook.Core.User", b =>
                {
                    b.HasOne("TraningPhonebook.Core.Contact", "ProfileContact")
                        .WithMany()
                        .HasForeignKey("ProfileContactId");
                });
#pragma warning restore 612, 618
        }
    }
}
